imports:
  - deptrac.base.yaml
  - deptrac.layers.baseline.yaml

parameters:
  layers:
    - name: SPL
      collectors: [ { type: className, regex: ^(Psr\\.*|Spl.*) } ]

    - name: Vendor
      collectors:
        - type: bool
          must: [ { type: className, value: ((.+\\.*)|.*_.*) } ]
          must_not: [ { type: directory, value: src/.* }, { type: layer, layer: SPL } ]

    # Hexagonal
    - name: Domain
      collectors: [ { type: directory, regex: src/(Module|Shared)/.*/Domain/.* } ]

    - name: Application
      collectors: [ { type: directory, regex: src/(Module|Shared)/.*/Application/.* } ]

    - name: Infrastructure
      collectors: [ { type: directory, regex: src/(Module|Shared)/.*/Infrastructure/.* } ]

    - name: UserInterface
      collectors: [ { type: directory, regex: src/(Module|Shared)/.*/UserInterface/.* } ]

    # Mvc
    - name: Model
      collectors: [ { type: directory, regex: src/Module/.*/Model/.* } ]

    - name: View
      collectors: [ { type: directory, regex: src/Module/.*/View/.* } ]

    - name: Controller
      collectors: [ { type: directory, regex: src/Module/.*/Controller/.* } ]

    - name: Facade
      collectors: [ { type: className, value: Module\\Mvc\\.*Facade } ]

  ruleset:
    Vendor: ~

    # Hexagonal
    Domain: ~
    Application: [ Domain, SPL ]
    UserInterface: [ Application, Vendor ]
    Infrastructure: [ UserInterface, Application, Domain, Facade, Vendor ]

    # Mvc
    Model: [ Vendor ] # it could be a specific vendor (Doctrine) insted all of them
    View: [ Vendor ] # it could be a specific vendor (Twig) insted all of them
    Controller: [ View, Model, Vendor ]
